name: Deploy to GitHub Pages

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This is important for allowing the action to push to your repository
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for git worktree

      - name: Setup Node.js ⚙️
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies 📦
        run: npm ci

      - name: Build for GitHub Pages 🏗️
        run: |
          echo "GITHUB_PAGES=true" >> $GITHUB_ENV
          npm run build
          
          # Check if out directory exists, if not create it
          if [ -d "out" ]; then
            echo "Using existing out directory"
          else
            echo "Creating out directory"
            mkdir -p out
          fi
          
          # Create .nojekyll file
          touch out/.nojekyll
          
          # List directories to debug
          echo "Listing directories:"
          ls -la



      - name: Deploy to GitHub Pages 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: out
          branch: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}  # Use the automatically provided token
