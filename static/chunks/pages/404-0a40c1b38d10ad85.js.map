{"version":3,"file":"static/chunks/pages/404-0a40c1b38d10ad85.js","mappings":"sLA+FgBA,qCAAAA,aA/FyC,UAIlD,MAqBDC,EAA0D,YAAhC,OAAOC,qBAEjCC,EAAY,IAAIC,IAChBC,EAAuB,EAAE,CAmExB,SAASL,EAAmC,CAIjC,EAJiC,YACjDM,CAAO,YACPC,CAAU,UACVC,CAAQ,CACQ,CAJiC,EAK3CC,EAAsBD,GAAY,CAACP,EAEnC,CAACS,EAASC,EAAW,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,GAAS,GACjCC,EAAaC,GAAAA,EAAAA,MAAAA,EAAiB,MAC9BC,EAAaC,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,IAC7BH,EAAWI,OAAO,CAAGC,CACvB,EAAG,EAAE,EA6BL,MA3BAC,GAAAA,EAAAA,SAAAA,EAAU,KACR,GAAIlB,EAAyB,CAC3B,GAAIQ,GAAcC,EAAS,OAE3B,IAAMQ,EAAUL,EAAWI,OAAO,CAClC,GAAIC,GAAWA,EAAQE,OAAO,CAO5B,CAP8B,MA7CtC,SAASC,CACS,CAChBC,CAAyB,CACzBC,CAAoC,EAEpC,GAAM,IAAEC,CAAE,CAAEC,UAAQ,UAAEC,CAAQ,CAAE,CAAGC,SA3C5BA,CAAmD,EAC1D,IAOIC,EAPEJ,EAAK,CACTK,KAAMN,EAAQM,IAAI,EAAI,KACtBC,OAAQP,EAAQhB,UAAU,EAAI,EAChC,EACMwB,EAAW1B,EAAO2B,IAAI,CAC1B,GAASC,EAAIJ,IAAI,GAAKL,EAAGK,IAAI,EAAII,EAAIH,MAAM,GAAKN,EAAGM,MAAM,EAI3D,GAAIC,GACFH,GAAWzB,EAAU+B,EADT,CACY,CAACH,EAAAA,EAEvB,OAAOH,EAIX,IAAMF,EAAW,IAAItB,IAkBrB,OARAwB,EAAW,CACTJ,KACAC,SAXe,IAAIvB,qBAAqB,IACxCiC,EAAQC,OAAO,CAAC,IACd,IAAMd,EAAWI,EAASQ,GAAG,CAACG,EAAMC,MAAM,EACpCC,EAAYF,EAAMG,cAAc,EAAIH,EAAMI,iBAAiB,CAAG,EAChEnB,GAAYiB,GACdjB,EAASiB,EAEb,EACF,EAJ+B,YAQ7Bb,CACF,EAEArB,EAAOqC,IAAI,CAAClB,GACZrB,EAAUwC,GAAG,CAACnB,EAAII,GACXA,CACT,EAOoDL,GAIlD,OAHAG,EAASiB,GAAG,CAACzB,EAASI,GAEtBG,EAASJ,OAAO,CAACH,GACV,SAAS0B,EAKd,GAJAlB,EAASmB,MAAM,CAAC3B,GAChBO,EAASmB,SAAS,CAAC1B,GAGG,IAAlBQ,EAASoB,IAAI,CAAQ,CACvBrB,EAASsB,UAAU,GACnB5C,EAAU0C,MAAM,CAACrB,GACjB,IAAMwB,EAAQ3C,EAAO4C,SAAS,CAC5B,GAAShB,EAAIJ,IAAI,GAAKL,EAAGK,IAAI,EAAII,EAAIH,MAAM,GAAKN,EAAGM,MAAM,EAEvDkB,EAAQ,CAAC,GAAG,EACPE,MAAM,CAACF,EAAO,EAEzB,CACF,CACF,EAsBU9B,EACA,GAAeqB,GAAa5B,EAAW4B,GACvC,CAAEV,IAAI,CAAEvB,QAAAA,KAAAA,EAAAA,EAASW,OAAO,YAAEV,CAAW,EAK3C,MACE,CADK,EACD,CAACG,EAAS,CACZ,IAAMyC,EAAeC,CAAAA,EAAAA,EAAAA,mBAAAA,EAAoB,IAAMzC,EAAW,KAC1D,MAAO,IAAM0C,CAAAA,EAAAA,EAAAA,kBAAAA,EAAmBF,EAClC,CAGJ,EAAG,CAAC1C,EAAYF,EAAYD,EAASI,EAASG,EAAWI,OAAO,CAAC,EAM1D,CAACF,EAAYL,EAJCM,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,KAC/BL,GAAW,EACb,EAAG,EAAE,EAEqC,wUC5HnC2C,qCAAAA,KAXT,IAAIA,EAAY,IAAgB,uHCShBC,qCAAAA,aAT8B,MASvC,SAASA,EACdC,CAAmB,CACnBC,CAAmB,EAEnB,IAAMC,EAAW5C,CAAAA,EAAAA,EAAAA,MAAAA,EAA4B,MACvC6C,EAAW7C,CAAAA,EAAAA,EAAAA,MAAAA,EAA4B,MAS7C,MAAOE,CAAAA,EAAAA,EAAAA,WAAAA,EACL,IACE,GAAgB,OAAZC,EAAkB,CACpB,IAAM2C,EAAaF,EAASzC,OAAO,CAC/B2C,IACFF,EAASzC,MADK,CACE,CAAG,KACnB2C,KAEF,IAAMC,EAAaF,EAAS1C,OAAO,CAC/B4C,IACFF,EAAS1C,MADK,CACE,CAAG,KACnB4C,IAEJ,MACML,CADC,GAEHE,EADQ,OACQ,CAAGI,EAASN,EAAMvC,EAAAA,EAEhCwC,GACFE,GAAS1C,OAAO,CAAG6C,EAASL,EAAMxC,EAAAA,CAGxC,EACA,CAACuC,EAAMC,EAAK,CAEhB,CAEA,SAASK,EACPN,CAAgC,CAChCvC,CAAiB,EAEjB,GAAoB,YAAhB,OAAOuC,EAST,OADAA,EAAKvC,OAAO,CAAGA,EACR,KACLuC,EAAKvC,OAAO,CAAG,IACjB,CAX8B,EAC9B,IAAM8C,EAAUP,EAAKvC,SACrB,YAAI,OAAO8C,EACFA,EAEA,IAAMP,EAAK,KAEtB,CAMF,MANS,sXCkoBT,OAAmB,mBAAnB,GANaQ,aAAa,mBAAbA,qCAjrBoC,WAErB,UACD,UACD,UACI,UACJ,UACI,UAEE,UACA,UACJ,UACC,QACH,MA0G1B,IAAMC,EAAa,IAAIC,IAUvB,SAASC,EACPC,CAAkB,CAClBC,CAAY,CACZC,CAAU,CACV/C,CAAwB,EAMxB,GAAKgD,CAAD,EAACA,EAAAA,UAAAA,EAAWF,IAMhB,GANuB,CAMlB9C,EAAQiD,qBAAqB,CAAE,CAUlC,IAAMC,EAAgBJ,EAAO,IAAMC,EAAK,KARtC,CAQ4CI,IAPlB,IAAnBnD,EAAQmD,MAAM,CACjBnD,EAAQmD,MAAM,CAEd,QAJ6D,GAIjDN,EACVA,EAAOM,MAAM,MACbC,CAAAA,EAKR,GAAIV,EAAWW,GAAG,CAACH,GACjB,OAIFR,EAAWY,GAAG,CALqB,EAMrC,CAMAT,EAAOD,QAAQ,CAACE,EAAMC,EAAI/C,GAASuD,KAAK,CAAC,IAKzC,GACF,CA2FA,SAASC,EAAkBC,CAAkC,QAC3D,UAAwC,OAA7BA,EACFA,EAGFC,CAAAA,EAAAA,EAAAA,SAAAA,EAAUD,EACnB,CAUA,IAAME,EAAOC,EAAAA,GAAPD,IAAY,CAACE,MAAbF,IAAuB,CAC3B,SAASG,CAAmB,CAAEC,CAAY,EAGxC,IAFIC,EAwKAC,EAtKE,CACJnB,KAAMoB,CAAQ,CACdnB,GAAIoB,CAAM,CACVH,SAAUI,CAAY,CACtBxB,SAAUyB,EAAe,IAAI,UAC7BC,CAAQ,SACRC,CAAO,SACPC,CAAO,CACPC,QAAM,QACNtB,CAAM,SACNuB,CAAO,YACPC,CAAU,CACVC,aAAcC,CAAgB,CAC9BC,aAAcC,CAAgB,gBAC9BC,GAAiB,CAAK,CACtB,GAAGC,EACJ,CAAGC,EAEJlB,EAAWI,EAGTY,GACC,kBAAOhB,GAA6C,UAApB,OAAOA,CAAa,EAAO,EAC5D,EACW,SAAXA,CAAYmB,IAAAA,MAAZnB,IAAeA,KAGjB,IAAMnB,EAASe,EAAAA,OAAK,CAACwB,UAAU,CAACC,EAAAA,aAAa,EAEvCC,GAAmC,IAAjBjB,EAoHlB,MAAEvB,CAAI,CAAEC,IAAE,CAAE,CAAGa,EAAAA,OAAK,CAAC2B,OAAO,CAAC,KACjC,GAAI,CAAC1C,EAAQ,CACX,IAAM2C,EAAehC,EAAkBU,GACvC,MAAO,CACLpB,KAAM0C,EACNzC,GAAIoB,EAASX,EAAkBW,GAAUqB,CAC3C,CACF,CAEA,GAAM,CAACA,EAAcC,EAAW,CAAGC,GAAAA,EAAAA,WAAAA,EAAY7C,EAAQqB,GAAU,GAEjE,MAAO,CACLpB,KAAM0C,EACNzC,GAAIoB,EAASuB,CAAAA,EAAAA,EAAAA,WAAAA,EAAY7C,EAAQsB,GAAUsB,GAAcD,CAC3D,CACF,EAAG,CAAC3C,EAAQqB,EAAUC,EAAO,EAEvBwB,EAAe/B,EAAAA,OAAK,CAACrE,MAAM,CAASuD,GACpC8C,EAAahC,EAAAA,OAAK,CAACrE,MAAM,CAASwD,GAIpCiC,IA4BAf,EAAQL,EAAAA,OAAK,CA5BG,QA4BM,CAACiC,IAAI,CAAC7B,EAAAA,EAYhC,IAAM8B,EAAgBd,EAClBf,GAA0B,UAAjB,OAAOA,GAAsBA,EAAM8B,GAAG,CAC/ChC,EAEE,CAACiC,EAAoBhF,EAAWiF,EAAa,CAAGxH,CAAAA,EAAAA,EAAAA,eAAAA,EAAgB,CACpEO,WAAY,OACd,GAEMkH,EAA8BtC,EAAAA,OAAK,CAACnE,WAAW,CACnD,KAEMmG,EAAWlG,OAAO,GAAKqD,GAAM4C,EAAajG,OAAO,GAAKoD,CAAAA,GAAM,CAC9DmD,IACAL,EAAWlG,OAAO,CAAGqD,EACrB4C,EAAajG,OAAO,CAAGoD,GAGzBkD,EAAmBG,EACrB,EACA,CAACpD,EAAID,EAAMmD,EAAcD,EAAmB,EAGxCI,EAASpE,CAAAA,EAAAA,EAAAA,YAAAA,EAAakE,EAA6BJ,GAGzDlC,EAAAA,OAAK,CAAChE,SAAS,CAAC,KAMTiD,GAKA7B,GAAcsE,EALN,CAUb1C,EAASC,EAAQC,EAAMC,CALL,CAKS,MALS,EAKPI,CAAO,EACtC,EAAG,CAACJ,EAAID,EAAM9B,EAAWmC,EAAQmC,EAAiBzC,MAAAA,EAAAA,KAAAA,EAAAA,EAAQM,MAAM,CAAEN,EAAO,EAEzE,IAAMwD,EAMF,CACFN,IAAKK,EACL1B,QAAQ4B,CAAC,EASH,GAAmB,YAA+B,OAAxB5B,GAC5BA,EAAQ4B,GAIRtB,GACAf,EAAMiB,KAAK,EACX,YACA,OADOjB,EAAMiB,KAAK,CAACR,OAAO,EAE1BT,EAAMiB,KAAK,CAACR,OAAO,CAAC4B,GAGjBzD,IAIDyD,EAAEC,EAJO,cAIS,EA5X9B,SAASC,CACY,CACnB3D,CAAsC,CACtCC,CAAY,CACZC,CAAU,CACVwB,CAAiB,CACjBC,CAAiB,CACjBC,CAAgB,CAChBtB,CAAuB,CACvBwB,CAAmC,EAEnC,GAAM,UAAE8B,CAAQ,CAAE,CAAGH,EAAEI,aAAa,CAKpC,KAFoD,MAA3BD,EAASE,WAAW,IAGtBC,SA9BhBA,CAAuC,EAE9C,IAAM7F,EADc8F,EAAMH,aAAa,CACZI,YAAY,CAAC,UACxC,OACG/F,GAAqB,UAAXA,GACX8F,EAAME,OAAO,EACbF,EAAMG,OAAO,EACbH,EAAMI,QAAQ,EACdJ,EAAMK,MAAM,EACXL,EADe,WACE,EAAgC,IAA5BA,EAAMM,UADiB,CACN,CAACC,KAE5C,EAmByCd,IACrCA,EAAEI,aAAa,CAACW,YAAY,CAAC,cAC7B,GAKE,CAACrE,CAAAA,EAAAA,EAAAA,UAAAA,EAAWF,GAAO,CACjByB,IAGF+B,EAAEgB,GAHS,WAGK,GAChBC,SAAShD,OAAO,CAACzB,IAInB,MACF,CAEAwD,EAAEgB,cAAc,GAgChBE,CA9BiB,KACf,GAAI7C,EAAY,CACd,IAAI8C,GAAqB,EAQzB,GANA9C,EAAW,CACT2C,eAAgB,KACdG,GAAqB,CACvB,CACF,GAEIA,EACF,MAEJ,CAGA,IAAMC,EAAejD,KANK,CAMLA,GAAAA,EACjB,OAD2B,YACP5B,EACtBA,CAAM,CAAC0B,EAAU,EADa,QACD,OAAO,CAACzB,EAAMC,EAAI,SAC7CyB,SACArB,EACAsB,OAAQiD,CACV,GAEA7E,CAAM,CAAC0B,EAAU,UAAY,OAAO,CAACxB,GAAMD,EAAM,CAC/C2B,OAAQiD,CACV,EAEJ,KAGF,EA4TUpB,EACAzD,EACAC,EACAC,EACAwB,EACAC,EACAC,EACAtB,EACAwB,GAEJ,EACAC,aAAa0B,CAAC,EACR,GAA+C,YAA5B,OAAOzB,GAC5BA,EAAiByB,GAIjBtB,GACAf,EAAMiB,KAAK,EACyB,YAApC,OAAOjB,EAAMiB,KAAK,CAACN,YAAY,EAE/BX,EAAMiB,KAAK,CAACN,YAAY,CAAC0B,GAGtBzD,GAILD,EAASC,EAAQC,CAJJ,CAIUC,EAAI,QACzBI,EACAwE,UAAU,EAEV1E,uBAAuB,CACzB,EACF,EACA6B,aAEI,CAFU8C,MAAsC,EAEvC9C,CADT1B,CAASA,CAEH,GAA+C,YAAY,OAAjC2B,GAC5BA,EAAiBuB,GAIjBtB,GACAf,EAAMiB,KAAK,EACyB,YAApC,OAAOjB,EAAMiB,KAAK,CAACJ,YAAY,EAE/Bb,EAAMiB,KAAK,CAACJ,YAAY,CAACwB,GAGtBzD,GAILD,EAASC,EAAQC,CAJJ,CAIUC,EAAI,QACzBI,EACAwE,UAAU,EAEV1E,uBAAuB,CACzB,EACF,CACN,EAKA,GAAI4E,CAAAA,EAAAA,EAAAA,aAAAA,EAAc9E,GAChBsD,EADqB,IACN,CAAGtD,OACb,GACL,CAACiC,GACDV,GACgB,MAAfL,EAAM6D,IAAI,EAAY,CAAE,UAAU7D,EAAMiB,KAAAA,EACzC,CACA,IAAM6C,EAAY,KAAkB,IAAX5E,EAAyBA,EAASN,MAAAA,EAAAA,KAAAA,EAAAA,EAAQM,MAAM,GAQ9DL,IAAI,CACbkF,CAJAnF,MAAAA,EAAAA,KAAAA,EAAAA,EAAQoF,cAAAA,GACRC,CAAAA,EAAAA,EAAAA,eAAAA,EAAgBnF,EAAIgF,EAAWlF,MAAAA,EAAAA,KAAAA,EAAAA,EAAQsF,OAAO,CAAEtF,MAAAA,EAAAA,KAAAA,EAAAA,EAAQuF,aAAa,GAIrEC,CAAAA,EAAAA,EAAAA,WAAAA,EAAYC,CAAAA,EAAAA,EAAAA,SAAAA,EAAUvF,EAAIgF,EAAWlF,MAAAA,EAAAA,KAAAA,EAAAA,EAAQ0F,aAAa,EAC9D,QAEIvD,EASKpB,EAAAA,OAAK,CAAC4E,IATK,QASO,CAACvE,EAAOoC,GAIjC,UAAClB,IAAAA,CAAG,GAAGF,CAAS,CAAG,GAAGoB,CAAU,UAC7BrC,GAGP,GAGIyE,EAAoBC,CAAAA,EAAAA,EAAAA,aAAAA,EAEvB,CAEDC,QAJIF,CAIK,CACX,GAEahG,EAAgB,IAGpB2C,CAAAA,EAAAA,EAAAA,UAAAA,EAAWqD,GAGpB,EAAe9E,sPCvrBR,SAASuE,EACdU,CAAY,CACZzF,CAAuB,CACvBgF,CAA2B,CAC3BC,CAAuC,EAmBrC,OAAO,CAEX,4FAzBgBF,qCAAAA,OAJ2B,yTCD5B,SAASW,IACtB,MACE,WAACC,MAAAA,CAAIC,UAAU,sDACb,UAACC,KAAAA,CAAGD,UAAU,mCAA0B,yBACxC,UAACE,IAAAA,CAAEF,UAAU,wBAAe,+CAC5B,WAACE,IAAAA,CAAEF,UAAU,yBAAe,qBAAmDG,OAAO3B,QAAQ,CAACzE,IAAI,GAAG,CAAE,CACxG,SAACa,IAAIA,CAACb,KAAK,aACT,UAACqC,IAAAA,CAAE4D,UAAU,CADVpF,mDACqD,qBAIhE,kBCZA,4CACA,OACA,WACA,OAAe,EAAQ,IAA4B,CACnD,EACA,UAFsB,QCJtB,iBAA8C","sources":["webpack://_N_E/../../src/client/use-intersection.tsx","webpack://_N_E/../../../../src/shared/lib/utils/error-once.ts","webpack://_N_E/../../src/client/use-merged-ref.ts","webpack://_N_E/../../src/client/link.tsx","webpack://_N_E/../../src/client/get-domain-locale.ts","webpack://_N_E/./src/pages/404.tsx","webpack://_N_E/?23f1","webpack://_N_E/./node_modules/next/link.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react'\nimport {\n  requestIdleCallback,\n  cancelIdleCallback,\n} from './request-idle-callback'\n\ntype UseIntersectionObserverInit = Pick<\n  IntersectionObserverInit,\n  'rootMargin' | 'root'\n>\n\ntype UseIntersection = { disabled?: boolean } & UseIntersectionObserverInit & {\n    rootRef?: React.RefObject<HTMLElement | null> | null\n  }\ntype ObserveCallback = (isVisible: boolean) => void\ntype Identifier = {\n  root: Element | Document | null\n  margin: string\n}\ntype Observer = {\n  id: Identifier\n  observer: IntersectionObserver\n  elements: Map<Element, ObserveCallback>\n}\n\nconst hasIntersectionObserver = typeof IntersectionObserver === 'function'\n\nconst observers = new Map<Identifier, Observer>()\nconst idList: Identifier[] = []\n\nfunction createObserver(options: UseIntersectionObserverInit): Observer {\n  const id = {\n    root: options.root || null,\n    margin: options.rootMargin || '',\n  }\n  const existing = idList.find(\n    (obj) => obj.root === id.root && obj.margin === id.margin\n  )\n  let instance: Observer | undefined\n\n  if (existing) {\n    instance = observers.get(existing)\n    if (instance) {\n      return instance\n    }\n  }\n\n  const elements = new Map<Element, ObserveCallback>()\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      const callback = elements.get(entry.target)\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0\n      if (callback && isVisible) {\n        callback(isVisible)\n      }\n    })\n  }, options)\n  instance = {\n    id,\n    observer,\n    elements,\n  }\n\n  idList.push(id)\n  observers.set(id, instance)\n  return instance\n}\n\nfunction observe(\n  element: Element,\n  callback: ObserveCallback,\n  options: UseIntersectionObserverInit\n): () => void {\n  const { id, observer, elements } = createObserver(options)\n  elements.set(element, callback)\n\n  observer.observe(element)\n  return function unobserve(): void {\n    elements.delete(element)\n    observer.unobserve(element)\n\n    // Destroy observer when there's nothing left to watch:\n    if (elements.size === 0) {\n      observer.disconnect()\n      observers.delete(id)\n      const index = idList.findIndex(\n        (obj) => obj.root === id.root && obj.margin === id.margin\n      )\n      if (index > -1) {\n        idList.splice(index, 1)\n      }\n    }\n  }\n}\n\nexport function useIntersection<T extends Element>({\n  rootRef,\n  rootMargin,\n  disabled,\n}: UseIntersection): [(element: T | null) => void, boolean, () => void] {\n  const isDisabled: boolean = disabled || !hasIntersectionObserver\n\n  const [visible, setVisible] = useState(false)\n  const elementRef = useRef<T | null>(null)\n  const setElement = useCallback((element: T | null) => {\n    elementRef.current = element\n  }, [])\n\n  useEffect(() => {\n    if (hasIntersectionObserver) {\n      if (isDisabled || visible) return\n\n      const element = elementRef.current\n      if (element && element.tagName) {\n        const unobserve = observe(\n          element,\n          (isVisible) => isVisible && setVisible(isVisible),\n          { root: rootRef?.current, rootMargin }\n        )\n\n        return unobserve\n      }\n    } else {\n      if (!visible) {\n        const idleCallback = requestIdleCallback(() => setVisible(true))\n        return () => cancelIdleCallback(idleCallback)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled, rootMargin, rootRef, visible, elementRef.current])\n\n  const resetVisible = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  return [setElement, visible, resetVisible]\n}\n","let errorOnce = (_: string) => {}\nif (process.env.NODE_ENV !== 'production') {\n  const errors = new Set<string>()\n  errorOnce = (msg: string) => {\n    if (!errors.has(msg)) {\n      console.error(msg)\n    }\n    errors.add(msg)\n  }\n}\n\nexport { errorOnce }\n","import { useCallback, useRef, type Ref } from 'react'\n\n// This is a compatibility hook to support React 18 and 19 refs.\n// In 19, a cleanup function from refs may be returned.\n// In 18, returning a cleanup function creates a warning.\n// Since we take userspace refs, we don't know ahead of time if a cleanup function will be returned.\n// This implements cleanup functions with the old behavior in 18.\n// We know refs are always called alternating with `null` and then `T`.\n// So a call with `null` means we need to call the previous cleanup functions.\nexport function useMergedRef<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  const cleanupA = useRef<(() => void) | null>(null)\n  const cleanupB = useRef<(() => void) | null>(null)\n\n  // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.\n  // (this happens often if the user doesn't pass a ref to Link/Form/Image)\n  // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),\n  // and the user might pass that ref into ref-merging library that doesn't support cleanup refs\n  // (because it hasn't been updated for React 19)\n  // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.\n  // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.\n  return useCallback(\n    (current: TElement | null): void => {\n      if (current === null) {\n        const cleanupFnA = cleanupA.current\n        if (cleanupFnA) {\n          cleanupA.current = null\n          cleanupFnA()\n        }\n        const cleanupFnB = cleanupB.current\n        if (cleanupFnB) {\n          cleanupB.current = null\n          cleanupFnB()\n        }\n      } else {\n        if (refA) {\n          cleanupA.current = applyRef(refA, current)\n        }\n        if (refB) {\n          cleanupB.current = applyRef(refB, current)\n        }\n      }\n    },\n    [refA, refB]\n  )\n}\n\nfunction applyRef<TElement>(\n  refA: NonNullable<Ref<TElement>>,\n  current: TElement\n) {\n  if (typeof refA === 'function') {\n    const cleanup = refA(current)\n    if (typeof cleanup === 'function') {\n      return cleanup\n    } else {\n      return () => refA(null)\n    }\n  } else {\n    refA.current = current\n    return () => {\n      refA.current = null\n    }\n  }\n}\n","'use client'\n\nimport type {\n  NextRouter,\n  PrefetchOptions as RouterPrefetchOptions,\n} from '../shared/lib/router/router'\n\nimport React, { createContext, useContext } from 'react'\nimport type { UrlObject } from 'url'\nimport { resolveHref } from './resolve-href'\nimport { isLocalURL } from '../shared/lib/router/utils/is-local-url'\nimport { formatUrl } from '../shared/lib/router/utils/format-url'\nimport { isAbsoluteUrl } from '../shared/lib/utils'\nimport { addLocale } from './add-locale'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\nimport type { AppRouterInstance } from '../shared/lib/app-router-context.shared-runtime'\nimport { useIntersection } from './use-intersection'\nimport { getDomainLocale } from './get-domain-locale'\nimport { addBasePath } from './add-base-path'\nimport { useMergedRef } from './use-merged-ref'\nimport { errorOnce } from '../shared/lib/utils/error-once'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype OnNavigateEventHandler = (event: { preventDefault: () => void }) => void\n\ntype InternalLinkProps = {\n  /**\n   * The path or URL to navigate to. It can also be an object.\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#with-url-object\n   */\n  href: Url\n  /**\n   * Optional decorator for the path that will be shown in the browser URL bar. Before Next.js 9.5.3 this was used for dynamic routes, check our [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes) to see how it worked. Note: when this path differs from the one provided in `href` the previous `href`/`as` behavior is used as shown in the [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes).\n   */\n  as?: Url\n  /**\n   * Replace the current `history` state instead of adding a new url into the stack.\n   *\n   * @defaultValue `false`\n   */\n  replace?: boolean\n  /**\n   * Whether to override the default scroll behavior\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#disable-scrolling-to-the-top-of-the-page\n   *\n   * @defaultValue `true`\n   */\n  scroll?: boolean\n  /**\n   * Update the path of the current page without rerunning [`getStaticProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-props), [`getServerSideProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-server-side-props) or [`getInitialProps`](/docs/pages/api-reference/functions/get-initial-props).\n   *\n   * @defaultValue `false`\n   */\n  shallow?: boolean\n  /**\n   * Forces `Link` to send the `href` property to its child.\n   *\n   * @defaultValue `false`\n   */\n  passHref?: boolean\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`. Prefetching is only enabled in production.\n   *\n   * In App Router:\n   * - `null` (default): For statically generated pages, this will prefetch the full React Server Component data. For dynamic pages, this will prefetch up to the nearest route segment with a [`loading.js`](https://nextjs.org/docs/app/api-reference/file-conventions/loading) file. If there is no loading file, it will not fetch the full tree to avoid fetching too much data.\n   * - `true`: This will prefetch the full React Server Component data for all route segments, regardless of whether they contain a segment with `loading.js`.\n   * - `false`: This will not prefetch any data, even on hover.\n   *\n   * In Pages Router:\n   * - `true` (default): The full route & its data will be prefetched.\n   * - `false`: Prefetching will not happen when entering the viewport, but will still happen on hover.\n   * @defaultValue `true` (pages router) or `null` (app router)\n   */\n  prefetch?: boolean | null\n  /**\n   * The active locale is automatically prepended. `locale` allows for providing a different locale.\n   * When `false` `href` has to include the locale as the default behavior is disabled.\n   * Note: This is only available in the Pages Router.\n   */\n  locale?: string | false\n  /**\n   * Enable legacy link behavior.\n   * @deprecated This will be removed in v16\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n  /**\n   * Optional event handler for when the mouse pointer is moved onto Link\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when the `<Link>` is navigated.\n   */\n  onNavigate?: OnNavigateEventHandler\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<InternalLinkProps>\n\nconst prefetched = new Set<string>()\n\ntype PrefetchOptions = RouterPrefetchOptions & {\n  /**\n   * bypassPrefetchedCheck will bypass the check to see if the `href` has\n   * already been fetched.\n   */\n  bypassPrefetchedCheck?: boolean\n}\n\nfunction prefetch(\n  router: NextRouter,\n  href: string,\n  as: string,\n  options: PrefetchOptions\n): void {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    return\n  }\n\n  // We should only dedupe requests when experimental.optimisticClientCache is\n  // disabled.\n  if (!options.bypassPrefetchedCheck) {\n    const locale =\n      // Let the link's locale prop override the default router locale.\n      typeof options.locale !== 'undefined'\n        ? options.locale\n        : // Otherwise fallback to the router's locale.\n          'locale' in router\n          ? router.locale\n          : undefined\n\n    const prefetchedKey = href + '%' + as + '%' + locale\n\n    // If we've already fetched the key, then don't prefetch it again!\n    if (prefetched.has(prefetchedKey)) {\n      return\n    }\n\n    // Mark this URL as prefetched.\n    prefetched.add(prefetchedKey)\n  }\n\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter | AppRouterInstance,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean,\n  locale?: string | false,\n  onNavigate?: OnNavigateEventHandler\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (\n    (isAnchorNodeName && isModifiedEvent(e)) ||\n    e.currentTarget.hasAttribute('download')\n  ) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    if (replace) {\n      // browser default behavior does not replace the history state\n      // so we need to do it manually\n      e.preventDefault()\n      location.replace(href)\n    }\n\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    if (onNavigate) {\n      let isDefaultPrevented = false\n\n      onNavigate({\n        preventDefault: () => {\n          isDefaultPrevented = true\n        },\n      })\n\n      if (isDefaultPrevented) {\n        return\n      }\n    }\n\n    // If the router is an NextRouter instance it will have `beforePopState`\n    const routerScroll = scroll ?? true\n    if ('beforePopState' in router) {\n      router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        locale,\n        scroll: routerScroll,\n      })\n    } else {\n      router[replace ? 'replace' : 'push'](as || href, {\n        scroll: routerScroll,\n      })\n    }\n  }\n\n  navigate()\n}\n\ntype LinkPropsReal = React.PropsWithChildren<\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof LinkProps> &\n    LinkProps\n>\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation between routes.\n *\n * It is the primary way to navigate between routes in Next.js.\n *\n * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)\n */\nconst Link = React.forwardRef<HTMLAnchorElement, LinkPropsReal>(\n  function LinkComponent(props, forwardedRef) {\n    let children: React.ReactNode\n\n    const {\n      href: hrefProp,\n      as: asProp,\n      children: childrenProp,\n      prefetch: prefetchProp = null,\n      passHref,\n      replace,\n      shallow,\n      scroll,\n      locale,\n      onClick,\n      onNavigate,\n      onMouseEnter: onMouseEnterProp,\n      onTouchStart: onTouchStartProp,\n      legacyBehavior = false,\n      ...restProps\n    } = props\n\n    children = childrenProp\n\n    if (\n      legacyBehavior &&\n      (typeof children === 'string' || typeof children === 'number')\n    ) {\n      children = <a>{children}</a>\n    }\n\n    const router = React.useContext(RouterContext)\n\n    const prefetchEnabled = prefetchProp !== false\n\n    if (process.env.NODE_ENV !== 'production') {\n      function createPropError(args: {\n        key: string\n        expected: string\n        actual: string\n      }) {\n        return new Error(\n          `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n            (typeof window !== 'undefined'\n              ? // TODO: Remove this addendum if Owner Stacks are available\n                \"\\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n\n      // TypeScript trick for type-guarding:\n      const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n        href: true,\n      } as const\n      const requiredProps: LinkPropsRequired[] = Object.keys(\n        requiredPropsGuard\n      ) as LinkPropsRequired[]\n      requiredProps.forEach((key: LinkPropsRequired) => {\n        if (key === 'href') {\n          if (\n            props[key] == null ||\n            (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n          ) {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: props[key] === null ? 'null' : typeof props[key],\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n\n      // TypeScript trick for type-guarding:\n      const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n        as: true,\n        replace: true,\n        scroll: true,\n        shallow: true,\n        passHref: true,\n        prefetch: true,\n        locale: true,\n        onClick: true,\n        onMouseEnter: true,\n        onTouchStart: true,\n        legacyBehavior: true,\n        onNavigate: true,\n      } as const\n      const optionalProps: LinkPropsOptional[] = Object.keys(\n        optionalPropsGuard\n      ) as LinkPropsOptional[]\n      optionalProps.forEach((key: LinkPropsOptional) => {\n        const valType = typeof props[key]\n\n        if (key === 'as') {\n          if (props[key] && valType !== 'string' && valType !== 'object') {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: valType,\n            })\n          }\n        } else if (key === 'locale') {\n          if (props[key] && valType !== 'string') {\n            throw createPropError({\n              key,\n              expected: '`string`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'onClick' ||\n          key === 'onMouseEnter' ||\n          key === 'onTouchStart' ||\n          key === 'onNavigate'\n        ) {\n          if (props[key] && valType !== 'function') {\n            throw createPropError({\n              key,\n              expected: '`function`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'replace' ||\n          key === 'scroll' ||\n          key === 'shallow' ||\n          key === 'passHref' ||\n          key === 'prefetch' ||\n          key === 'legacyBehavior'\n        ) {\n          if (props[key] != null && valType !== 'boolean') {\n            throw createPropError({\n              key,\n              expected: '`boolean`',\n              actual: valType,\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n    }\n\n    const { href, as } = React.useMemo(() => {\n      if (!router) {\n        const resolvedHref = formatStringOrUrl(hrefProp)\n        return {\n          href: resolvedHref,\n          as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n        }\n      }\n\n      const [resolvedHref, resolvedAs] = resolveHref(router, hrefProp, true)\n\n      return {\n        href: resolvedHref,\n        as: asProp ? resolveHref(router, asProp) : resolvedAs || resolvedHref,\n      }\n    }, [router, hrefProp, asProp])\n\n    const previousHref = React.useRef<string>(href)\n    const previousAs = React.useRef<string>(as)\n\n    // This will return the first child, if multiple are provided it will throw an error\n    let child: any\n    if (legacyBehavior) {\n      if (process.env.NODE_ENV === 'development') {\n        if (onClick) {\n          console.warn(\n            `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n          )\n        }\n        if (onMouseEnterProp) {\n          console.warn(\n            `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n          )\n        }\n        try {\n          child = React.Children.only(children)\n        } catch (err) {\n          if (!children) {\n            throw new Error(\n              `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n            )\n          }\n          throw new Error(\n            `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n              (typeof window !== 'undefined'\n                ? \" \\nOpen your browser's console to view the Component stack trace.\"\n                : '')\n          )\n        }\n      } else {\n        child = React.Children.only(children)\n      }\n    } else {\n      if (process.env.NODE_ENV === 'development') {\n        if ((children as any)?.type === 'a') {\n          throw new Error(\n            'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n          )\n        }\n      }\n    }\n\n    const childRef: any = legacyBehavior\n      ? child && typeof child === 'object' && child.ref\n      : forwardedRef\n\n    const [setIntersectionRef, isVisible, resetVisible] = useIntersection({\n      rootMargin: '200px',\n    })\n\n    const setIntersectionWithResetRef = React.useCallback(\n      (el: Element | null) => {\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n          resetVisible()\n          previousAs.current = as\n          previousHref.current = href\n        }\n\n        setIntersectionRef(el)\n      },\n      [as, href, resetVisible, setIntersectionRef]\n    )\n\n    const setRef = useMergedRef(setIntersectionWithResetRef, childRef)\n\n    // Prefetch the URL if we haven't already and it's visible.\n    React.useEffect(() => {\n      // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n      if (process.env.NODE_ENV !== 'production') {\n        return\n      }\n\n      if (!router) {\n        return\n      }\n\n      // If we don't need to prefetch the URL, don't do prefetch.\n      if (!isVisible || !prefetchEnabled) {\n        return\n      }\n\n      // Prefetch the URL.\n      prefetch(router, href, as, { locale })\n    }, [as, href, isVisible, locale, prefetchEnabled, router?.locale, router])\n\n    const childProps: {\n      onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n      onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n      onClick: React.MouseEventHandler<HTMLAnchorElement>\n      href?: string\n      ref?: any\n    } = {\n      ref: setRef,\n      onClick(e) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!e) {\n            throw new Error(\n              `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n            )\n          }\n        }\n\n        if (!legacyBehavior && typeof onClick === 'function') {\n          onClick(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onClick === 'function'\n        ) {\n          child.props.onClick(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        if (e.defaultPrevented) {\n          return\n        }\n\n        linkClicked(\n          e,\n          router,\n          href,\n          as,\n          replace,\n          shallow,\n          scroll,\n          locale,\n          onNavigate\n        )\n      },\n      onMouseEnter(e) {\n        if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n          onMouseEnterProp(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onMouseEnter === 'function'\n        ) {\n          child.props.onMouseEnter(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        prefetch(router, href, as, {\n          locale,\n          priority: true,\n          // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n          bypassPrefetchedCheck: true,\n        })\n      },\n      onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n        ? undefined\n        : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n              onTouchStartProp(e)\n            }\n\n            if (\n              legacyBehavior &&\n              child.props &&\n              typeof child.props.onTouchStart === 'function'\n            ) {\n              child.props.onTouchStart(e)\n            }\n\n            if (!router) {\n              return\n            }\n\n            prefetch(router, href, as, {\n              locale,\n              priority: true,\n              // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n              bypassPrefetchedCheck: true,\n            })\n          },\n    }\n\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n    if (isAbsoluteUrl(as)) {\n      childProps.href = as\n    } else if (\n      !legacyBehavior ||\n      passHref ||\n      (child.type === 'a' && !('href' in child.props))\n    ) {\n      const curLocale = typeof locale !== 'undefined' ? locale : router?.locale\n\n      // we only render domain locales if we are currently on a domain locale\n      // so that locale links are still visitable in development/preview envs\n      const localeDomain =\n        router?.isLocaleDomain &&\n        getDomainLocale(as, curLocale, router?.locales, router?.domainLocales)\n\n      childProps.href =\n        localeDomain ||\n        addBasePath(addLocale(as, curLocale, router?.defaultLocale))\n    }\n\n    if (legacyBehavior) {\n      if (process.env.NODE_ENV === 'development') {\n        errorOnce(\n          '`legacyBehavior` is deprecated and will be removed in a future ' +\n            'release. A codemod is available to upgrade your components:\\n\\n' +\n            'npx @next/codemod@latest new-link .\\n\\n' +\n            'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components'\n        )\n      }\n      return React.cloneElement(child, childProps)\n    }\n\n    return (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n)\n\nconst LinkStatusContext = createContext<{\n  pending: boolean\n}>({\n  // We do not support link status in the Pages Router, so we always return false\n  pending: false,\n})\n\nexport const useLinkStatus = () => {\n  // This behaviour is like React's useFormStatus. When the component is not under\n  // a <form> tag, it will get the default value, instead of throwing an error.\n  return useContext(LinkStatusContext)\n}\n\nexport default Link\n","import type { DomainLocale } from '../server/config'\nimport type { normalizeLocalePath as NormalizeFn } from './normalize-locale-path'\nimport type { detectDomainLocale as DetectFn } from './detect-domain-locale'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function getDomainLocale(\n  path: string,\n  locale?: string | false,\n  locales?: readonly string[],\n  domainLocales?: readonly DomainLocale[]\n) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    const normalizeLocalePath: typeof NormalizeFn =\n      require('./normalize-locale-path').normalizeLocalePath\n    const detectDomainLocale: typeof DetectFn =\n      require('./detect-domain-locale').detectDomainLocale\n\n    const target = locale || normalizeLocalePath(path, locales).detectedLocale\n    const domain = detectDomainLocale(domainLocales, undefined, target)\n    if (domain) {\n      const proto = `http${domain.http ? '' : 's'}://`\n      const finalLocale = target === domain.defaultLocale ? '' : `/${target}`\n      return `${proto}${domain.domain}${normalizePathTrailingSlash(\n        `${basePath}${finalLocale}${path}`\n      )}`\n    }\n    return false\n  } else {\n    return false\n  }\n}\n","import Link from \"next/link\";\n\nexport default function Custom404() {\n  return (\n    <div className=\"container mx-auto my-12 py-12 text-center\">\n      <h1 className=\"text-4xl font-bold mb-4\">404 - Page Not Found</h1>\n      <p className=\"text-lg mb-6\">The page you're looking for doesn't exist.</p>\n      <p className=\"text-lg mb-6\">GitHub Pages URL: {typeof window !== 'undefined' ? window.location.href : ''}</p>\n      <Link href=\"/\">\n        <a className=\"px-4 py-2 bg-blue-500 text-white rounded\">Go Back Home</a>\n      </Link>\n    </div>\n  );\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/404\",\n      function () {\n        return require(\"private-next-pages/404.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/404\"])\n      });\n    }\n  ","module.exports = require('./dist/client/link')\n"],"names":["useIntersection","hasIntersectionObserver","IntersectionObserver","observers","Map","idList","rootRef","rootMargin","disabled","isDisabled","visible","setVisible","useState","elementRef","useRef","setElement","useCallback","current","element","useEffect","tagName","observe","callback","options","id","observer","elements","createObserver","instance","root","margin","existing","find","obj","get","entries","forEach","entry","target","isVisible","isIntersecting","intersectionRatio","push","set","unobserve","delete","size","disconnect","index","findIndex","splice","idleCallback","requestIdleCallback","cancelIdleCallback","errorOnce","useMergedRef","refA","refB","cleanupA","cleanupB","cleanupFnA","cleanupFnB","applyRef","cleanup","useLinkStatus","prefetched","Set","prefetch","router","href","as","isLocalURL","bypassPrefetchedCheck","prefetchedKey","locale","undefined","has","add","catch","formatStringOrUrl","urlObjOrString","formatUrl","Link","React","forwardRef","LinkComponent","forwardedRef","children","child","hrefProp","asProp","childrenProp","prefetchProp","passHref","replace","shallow","scroll","onClick","onNavigate","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","restProps","props","a","useContext","RouterContext","prefetchEnabled","useMemo","resolvedHref","resolvedAs","resolveHref","previousHref","previousAs","only","childRef","ref","setIntersectionRef","resetVisible","setIntersectionWithResetRef","el","setRef","childProps","e","defaultPrevented","linkClicked","nodeName","currentTarget","toUpperCase","isModifiedEvent","event","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","hasAttribute","preventDefault","location","navigate","isDefaultPrevented","routerScroll","priority","process","isAbsoluteUrl","type","curLocale","localeDomain","isLocaleDomain","getDomainLocale","locales","domainLocales","addBasePath","addLocale","defaultLocale","cloneElement","LinkStatusContext","createContext","pending","path","Custom404","div","className","h1","p","window"],"sourceRoot":"","ignoreList":[7]}